on: push

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
        - {os: macOS-latest,   r: 'release'}
        - {os: windows-latest, r: 'release'}
        - {os: ubuntu-22.04, r: 'devel'}
        - {os: ubuntu-22.04, r: 'release'}
        - {os: ubuntu-22.04, r: 'oldrel'}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      CRAN: ${{ matrix.config.cran }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        run: Rscript -e "install.packages('remotes')" -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), 'depends.Rds', version = 2)"

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('depends.Rds') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}-

      - name: Install R package dependencies
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: local::. # Necessary to avoid object usage linter errors.

      - name: R CMD check
        if: always()
        uses: r-lib/actions/check-r-package@v2
        with:
          error-on: '"note"'

      - name: Test coverage
        if: matrix.config.os == 'ubuntu-22.04' && matrix.config.r == 'release'
        run: |
          Rscript -e 'covr::codecov(token = "${{secrets.CODECOV_TOKEN}}")'
